// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/rust
{
	"name": "Rust",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	
	//"image": "mcr.microsoft.com/devcontainers/rust:1-1-bookworm",

	"build": {
		// Path is relative to the devcontainer.json file.
		"dockerfile": "Dockerfile",
		// Context is the directory containing the Dockerfile and any files it needs.
		// Path is relative to the devcontainer.json file. '..' is the workspace root.
		"context": "."
		// Optional: Pass build arguments to Dockerfile
		// "args": {
		// 	"USERNAME": "vscode"
		// }
	},



	// Use 'mounts' to make the cargo cache persistent in a Docker Volume.
	// "mounts": [
	// 	{
	// 		"source": "devcontainer-cargo-cache-${devcontainerId}",
	// 		"target": "/usr/local/cargo",
	// 		"type": "volume"
	// 	}
	// ]

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "rustc --version",

	// Configure tool-specific properties.
	"customizations": {
        "vscode": {
            // Add the IDs of extensions you want installed when the container is created.
            "extensions": [
                "rust-lang.rust-analyzer",   // Provides Cargo tasks, language support
                "vadimcn.vscode-lldb",       // Provides LLDB debugging
                "tamasfe.even-better-toml",  // Nice syntax highlighting for Cargo.toml
                "serayuzgur.crates"          // Helpful for managing dependencies (optional)
            ]
        }
	}

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
